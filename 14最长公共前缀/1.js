/**
 * @param {string[]} strs
 * @return {string}
 */
 var longestCommonPrefix = function(strs) {
  if(strs == "" ) return "";   // 数组判断不能为空
  let res = strs[0];   // 获取一个数组元素用来遍历比较
  for (let i = 1; i < strs.length ;i++) {  // 数组遍历
      let j = 0   // 放在外面是因为 下面使用 substr 方法时需要用 j 这个下标值
      for(; j < res.length ;j++) { // 字符串的遍历， 核心思想是让 j 在 两字符串的字符相同的情况下不断自增，最后取 j 值来获取对应字符串
          if(res[j] !== strs[i][j]){   // 出现字符不相同的情况，退出循环
             break;
          }
      }
      res = res.substr(0,j)   // substr() ,第一个参数为起始位置，第二个为终点，j 值为符合条件的字符串下标的最终位数
      if(res == "") return res; // 数组内的元素全部不相同的情况，提前退出循环
  }  
  return res;
};

// 总结，先拿一个元素，用它跟其他数组不断比较，取相同的字符保存
// 通常思想，两元素的字符串进行相等比较，如果相同则，设置参数存进一位字符，不断存取
// 这里用一种思想，先拿取其中一个元素，设一个for循环，让这个元素和下一个元素进行比较，每次比较成功，则 j 自增1
// 最后不相同时推出for循环，j 就拿到了相同字符的坐标数，这时让一开始拿的元素直接按 j 的位数对自己进行切除， 就可以拿到最大公共前缀了
// 由于是所有元素的最大公共前缀，所以盯着两个元素之间的比较，一旦出现不同的情况可以直接终止