1. JavaScript 是一种轻量级的脚本语言。它不具备开发操作系统的能力，而是只用来编写控制其他大型应用程序的“脚本”
  它是一种嵌入式语言，它本身不提供任何与 I/O输入输出 相关的API，都只能靠宿主HOST来提供，环境例如：浏览器。服务器环境例如Node项目
2. JavaScript语言是一种“对象模型”语言，宿主环境通过这个模型来描述自己的功能和操作接口，并通过JavaScript控制这些功能
  JavaScript 并不是纯粹的“面向对象语言”，还支持其他编程范式（比如函数式编程）
3. javas的核心语法部分分为基本的语法构造和标准库就是一系列具有各种功能的对象比如Array、Date、Math等）
  另外它还有额外的API
  1.浏览器API
  浏览器控制类：操作浏览器
  DOM 类：操作网页的各种元素
  Web 类：实现互联网的各种功能
  2.服务器API
  如果宿主环境是服务器，则会提供各种操作系统的 API， 比如文件操作 API、
  网络通信 API等等。这些你都可以在 Node 环境中找到
4. JavaScript 具有四点性能优势
  （1）灵活的语法，表达力强。
  JavaScript 既支持类似 C 语言清晰的过程式编程，也支持灵活的函数式编程。可以用来写并发处理
  （2）支持编译运行。
  JavaScript 语言本身，虽然是一种解释型语言，但是在现代浏览器中，JavaScript 都是编译后运行。程序会被高度优化，运行效率接近二进制程序。
  （3）事件驱动和非阻塞式设计
  JavaScript 程序可以采用事件驱动（event-driven）和非阻塞式（non-blocking）设计，在服务器端适合高并发环境，普通的硬件就可以承受很大的访问量。
5. JavaScript与Java的关系
  JavaScript的基本语法和对象体系，是模仿Java而设计的。但是，JavaScript没有采用Java的静态类型。正是因为JavaScript与Java有很大的相似性，所以这门语言才从一开始的LiveScript改名为JavaScript。基本上，JavaScript这个名字的原意是“很像Java的脚本语言”。

  在JavaScript语言中，函数是一种独立的数据类型，以及采用基于原型对象（prototype）的继承链。这是它与Java语法最大的两点区别。JavaScript语法要比Java自由得多。

  另外，Java语言需要编译，而JavaScript语言则是运行时由解释器直接执行。
6. 
  